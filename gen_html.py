import os
import random
from faker import Faker

# Initialize Faker instance
fake = Faker()

# Directory to store the generated HTML files
output_dir = "html_dataset"
if not os.path.exists(output_dir):
    os.makedirs(output_dir)

# Sample meaningful content
topics = ["Technology", "Health", "Education", "Finance", "Travel", "Food", "Entertainment", "Business"]
paragraph_samples = [fake.paragraph(nb_sentences=5), fake.paragraph(nb_sentences=6), fake.paragraph(nb_sentences=4)]

# Standard HTML tags to be used
basic_tags = {
    'structural_tags': ['<html>', '<head>', '<title>', '<body>', '<header>', '<footer>', '<nav>', '<section>', '<article>', '<aside>', '<h1>', '<h2>', '<h3>', '<h4>', '<h5>'],
    'text_formatting_tags': ['<p>', '<strong>', '<em>', '<u>', '<small>', '<blockquote>', '<pre>', '<code>'],
    'links': ['<a href="https://example.com">Visit Example</a>', '<a href="https://randomsite.com">Go to Random Site</a>'],
    'lists': ['<ul><li>Item A</li><li>Item B</li></ul>', '<ol><li>First</li><li>Second</li></ol>'],
    'images': ['<img src="https://via.placeholder.com/150" alt="Random image">']
}

# HTML template with placeholders
html_template = """<!DOCTYPE html>
<html>
<head>
    <title>{title}</title>
</head>
<body>
    <nav>
        <ul>
            <li><a href="index.html">Home</a></li>
            <li><a href="about.html">About</a></li>
            <li><a href="services.html">Services</a></li>
            <li><a href="contact.html">Contact</a></li>
        </ul>
    </nav>

    <header>
        <h1>{header_h1}</h1>
        <h2>{header_h2}</h2>
        <p>{paragraph_under_h2}</p>

        <h3>{header_h3}</h3>
        <p>{paragraph_under_h3}</p>

        <h4>{header_h4}</h4>
        <p>{paragraph_under_h4}</p>

        <h5>{header_h5}</h5>
        <p>{paragraph_under_h5}</p>
    </header>

    <section>
        <article>
            <h2>{article_heading}</h2>
            <p>{paragraph_article}</p>
            <p>{bold_text} and {italic_text} text formatting.</p>
            <p>{preformatted_text}</p>
            <blockquote>{blockquote_text}</blockquote>
        </article>
    </section>

    <aside>
        <p>Related links:</p>
        <ul>
            <li>{link}</li>
        </ul>
    </aside>

    <footer>
        <p>Generated by Python script.</p>
        {image}
    </footer>
</body>
</html>
"""

# Function to generate random content for each HTML file
def generate_meaningful_content():
    topic = random.choice(topics)
    job_title = fake.job()
    company = fake.company()
    return {
        'title': f"{topic} - {company}",
        'header_h1': f"{company} - {job_title}",
        'header_h2': f"{topic} in {company}",
        'paragraph_under_h2': fake.paragraph(nb_sentences=4),
        'header_h3': f"{topic} Trends in {fake.year()}",
        'paragraph_under_h3': fake.paragraph(nb_sentences=3),
        'header_h4': f"{topic} Insights",
        'paragraph_under_h4': fake.paragraph(nb_sentences=3),
        'header_h5': f"Future of {topic}",
        'paragraph_under_h5': fake.paragraph(nb_sentences=3),
        'article_heading': f"{topic} Article: {fake.bs()}",
        'paragraph_article': fake.paragraph(nb_sentences=4),
        'bold_text': '<strong>' + fake.word() + '</strong>',
        'italic_text': '<em>' + fake.word() + '</em>',
        'preformatted_text': '<pre>' + fake.sentence(nb_words=8) + '</pre>',
        'blockquote_text': f"'{fake.sentence(nb_words=10)}' - {fake.name()}",
        'link': random.choice(basic_tags['links']),
        'image': random.choice(basic_tags['images'])
    }

# Function to generate HTML file with content
def generate_html_file(filename, content):
    html_content = html_template.format(**content)
    filepath = os.path.join(output_dir, filename)
    
    with open(filepath, 'w') as f:
        f.write(html_content)
    print(f"Generated {filename}")

# Generate a dataset of 5 example HTML files with random content
for i in range(1, 6):
    meaningful_content = generate_meaningful_content()
    filename = f"html_page_{i}.html"
    generate_html_file(filename, meaningful_content)

print(f"HTML dataset generated in {output_dir} directory.")
